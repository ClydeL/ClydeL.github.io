<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Mua~ mua~]]></title>
  <subtitle><![CDATA[Clyde blog]]></subtitle>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  <link href="http://yoursite.com"/>
  <updated>2013-07-06T05:57:10.716Z</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[Clyde Lin]]></name>
    <email><![CDATA[i@mua.im]]></email>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[在Seesmic上使用自定义API]]></title>
    <link href="http://yoursite.com/2013/06/29/seesmic_api/"/>
    <id>http://yoursite.com/2013/06/29/seesmic_api/</id>
    <published>2013-06-29T08:23:39.000Z</published>
    <updated>2013-06-29T03:22:46.000Z</updated>
    <content type="html"><![CDATA[<h1>介绍</h1>

<p>  国内上twitter一直都很麻烦，手机上上推的客户端也很多，大家上twitter一般就是挂VPN要不就是 用API，上twitter的客户端也非常多，我用过的客户端中我最喜欢、用起来最顺心的只有两个，一个就是gtalk机器人（这算客户端吗？）还有就是seesmic。但我不记得从哪个版本开始seesmic已经不支持自定义API了。这样我很难过，因为已经习惯了，后来尝试进入seesmic数据库替换API来实现自定义API成功。</p>
<blockquote><p>注意：该方法需要手机root权限，还没有root的同学上网找一下root的方法。还有就是该方法需要挂VPN登录一次。</p>
</blockquote>


<h1>准备</h1>

<p>  这个方法需要用到ADB，去下载一下ADB，如果不想下载的话直接在手机上下载个终端软件进行操作也是可以的，只不过可能会有点儿蛋x。
  有了ADB就可以直接对手机进行操作了，对了这里win的同学还需要再安装一下驱动程序了。</p>
<h1>操作</h1>

<p>1.首先用<code>adb shell</code>进入手机。如果直接在手机终端上操作的同学忽略这一步。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="constant">Clyde</span>-<span class="constant">MacBook</span><span class="symbol">:~</span> clyde<span class="variable">$ </span>adb shell
shell<span class="variable">@android</span><span class="symbol">:/</span> $
</pre></td></tr></table></figure>

<p>2.用root权限进入seesmic数据库目录。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>shell<span class="variable">@android</span><span class="symbol">:/</span> <span class="variable">$ </span>su
shell<span class="variable">@android</span><span class="symbol">:/</span> <span class="comment"># cd /data/data/com.seesmic/databases</span>
</pre></td></tr></table></figure>

<p>这个时候用<code>ls</code>就可以看到seesmic的数据库了</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="title">shell</span>@android:/<span class="typedef"><span class="keyword">data</span>/<span class="keyword">data</span>/com.seesmic/databases # ls</span>
<span class="title">google_analytics</span>.db
<span class="title">google_analytics</span>.db-journal
<span class="title">twitter</span>.db
<span class="title">twitter</span>.db-journal
<span class="title">webview</span>.db
<span class="title">webview</span>.db-journal
<span class="title">webviewCookiesChromium</span>.db
<span class="title">webviewCookiesChromiumPrivate</span>.db
</pre></td></tr></table></figure>

<p>3.用<code>sqlite3</code>命令进入twitter.db进行操作。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>shell<span class="variable">@android</span><span class="symbol">:/data/data/com</span>.seesmic/databases <span class="comment"># sqlite3 twitter.db</span>
<span class="constant">SQLite</span> version <span class="number">3.7</span>.<span class="number">11</span> <span class="number">2012</span>-<span class="number">03</span>-<span class="number">20</span> <span class="number">11</span><span class="symbol">:</span><span class="number">35</span><span class="symbol">:</span><span class="number">50</span>
<span class="constant">Enter</span> <span class="string">".help"</span> <span class="keyword">for</span> instructions
<span class="constant">Enter</span> <span class="constant">SQL</span> statements terminated with a <span class="string">";"</span>
sqlite&gt;
</pre></td></tr></table></figure>

<p>4.修改<code>sqlite</code>显示格式</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="comment">sqlite</span>&gt; <span class="string">.</span><span class="comment">mode</span> <span class="comment">line
</pre></td></tr></table></figure>

<p>5.查看<code>accounts</code>表</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>sqlite&gt; <span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> accounts;</span>
</pre></td></tr></table></figure>

<p>这样就可以看到表的内容了。如果你没有登录过就不会有这个了，所以需要挂VPN登录一次。</p>
<p><img src="/img/seesmic_table_accounts.png" alt=""></p>
<p>箭头所指的那行就是API，我们需要修改的就是这个</p>
<p>6.修改API</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>sqlite&gt; <span class="operator"><span class="keyword">UPDATE</span> accounts <span class="keyword">SET</span> rest_api = <span class="string">'http://你的api地址/'</span> <span class="keyword">WHERE</span> name = <span class="string">'你的ID就是上面那张图name字段，我这里就是写clyde_lin'</span>;</span>
</pre></td></tr></table></figure>

<p>到此，全部完成，你可以在输入<code>select * from accounts;</code>来查看一下是否替换成功。
最后<code>sqlite&gt; .quit</code>退出sqlite。</p>
<p>这样就不用每次上推都要挂VPN了，一劳永逸，以后升级也不用再次修改。</p>
]]></content>
    <category scheme="http://yoursite.com/tags/Android/" term="Android"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[解决 Chrome 打不开 12306.cn]]></title>
    <link href="http://yoursite.com/2013/06/29/12306_on_chrome/"/>
    <id>http://yoursite.com/2013/06/29/12306_on_chrome/</id>
    <published>2013-06-29T02:55:35.000Z</published>
    <updated>2013-06-29T03:05:35.000Z</updated>
    <content type="html"><![CDATA[<p>12306 我已经找不到用什么词汇来形容他了，之前我用chrome打开它无法购票，页面上的信息可以让我们知道是证书的问题。原本跳出错误页面后会有一个继续浏览的按钮，不知道什么时候开始不见了。我上twitter问了一下，有一名推油告诉我一个解决方案。特别有意思，分享一下。</p>
<p>chrome打开12306，点击购票网页打不开。<code>commd+t</code>新建标签咯，win下是（<code>ctrl+t</code>）好像是这样的。然后打开网址</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="symbol">https:</span>/<span class="regexp">/dynamic.12306.cn/otsweb</span><span class="regexp">/
</pre></td></tr></table></figure>

<p>这个时候跳出证书的安全问题，这个时候也没有<code>继续浏览</code>的按钮了。直接键盘输入<code>proceed</code>。完成。。可以了。
我第一次知道这个方法的时候觉得 。。。奇葩。</p>
]]></content>
    <category scheme="http://yoursite.com/tags/坑爹货/" term="坑爹货"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[在终端(terminal)中使用sublime]]></title>
    <link href="http://yoursite.com/2013/06/28/subl_on_mac_trem/"/>
    <id>http://yoursite.com/2013/06/28/subl_on_mac_trem/</id>
    <published>2013-06-28T13:37:24.000Z</published>
    <updated>2013-06-29T03:32:04.000Z</updated>
    <content type="html"><![CDATA[<p>最近在玩这个Hexo，朋友今天下午就问我能不能在终端里面直接用sublime打开要编辑的文章，hexo很多事情就在terminal中完成咯。一开始写文章的时候，都是用vim直接在终端中直接写。后来呢，发现有点儿麻烦就是很多文章中会设计到代码，而在终端里面的Vim里写代码又不是很好写so我就想用sublime来写文章啦。
但每次都要去Finder里面找到hexo这个新增文章的 md 再用sublime打开有点儿麻烦，就想直接在终端中打开。</p>
<p>那其实sublime自带了这样的命令。但没有在环境变量（win下是真么叫的 也就是Mac下的<code>$PATH</code>了）中。这样就很好办了，只要将其加到<code>$PATH</code>中就可以了。</p>
<p>这个命令的路径在<code>/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl</code>
那现在有两种办法，办法一就是将这个命令直接加到<code>$PATH</code>里面。第二种就是用<code>ln</code>命令link一个到bin中</p>
<p>直接在终端中输入</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>ln -s /Applications/Sublime<span class="command">\ </span>Text<span class="command">\ </span>2.app/Contents/SharedSupport/bin/subl /usr/bin/subl
</pre></td></tr></table></figure>

<p>就成功了。</p>
<p>需要撰写文章的时候只需要</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>hexo <span class="keyword">new</span> <span class="string">"_new"</span>
subl source<span class="regexp">/_posts/</span>_<span class="keyword">new</span>.md
</pre></td></tr></table></figure>

]]></content>
    <category scheme="http://yoursite.com/tags/Mac/" term="Mac"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Mac 与 Linux 下计算代码行数]]></title>
    <link href="http://yoursite.com/2013/06/28/codeline/"/>
    <id>http://yoursite.com/2013/06/28/codeline/</id>
    <published>2013-06-28T01:03:36.000Z</published>
    <updated>2013-06-28T07:42:21.000Z</updated>
    <content type="html"><![CDATA[<p>以前作为Windows死程的时候计算代码是用一个小工具来计算的。然而到了Mac上没有那货了，但其实我们的选择更多了。</p>
<p>最简单的一种就是用Mac自带的wc命令来计算，比如我要计算某个目录下所有.java文件的行数就用</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="comment">wc</span> <span class="literal">-</span><span class="comment">l</span> <span class="comment">`find</span> <span class="literal">-</span><span class="comment">E</span> <span class="comment">$path</span> <span class="literal">-</span><span class="comment">regex</span> <span class="comment">"</span>.<span class="comment">*\</span>.<span class="comment">(java)"`
</pre></td></tr></table></figure>

<p>但这样会将空格和注释都计算进去，因此就不是那么准确。</p>
<p>给大家介绍一个工具。<code>colc.pl</code>下载呢可以去<a href="http://sourceforge.net/projects/cloc/">这里</a>下载。</p>
<p>当然也可以直接</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="comment">//wget下载</span>
wget http:<span class="comment">//nchc.dl.sourceforge.net/project/cloc/cloc/v1.58/cloc-1.58.pl</span>

<span class="comment">//添加执行</span>
chmod +x cloc-<span class="number">1.58</span><span class="variable">.pl</span>

<span class="comment">//执行就直接</span>
./cloc-<span class="number">1.58</span><span class="variable">.pl</span> $path
</pre></td></tr></table></figure>

<p>也可以直接按项目分开写成一个sh
比如我的possMobileLine.sh 这里我为了方便就重命名为<code>cloc.pl</code>了</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="comment">echo</span> <span class="comment">wait</span> <span class="comment">a</span> <span class="comment">moment</span>.<span class="string">.</span><span class="string">.</span>
<span class="comment">cloc</span>.<span class="comment">pl</span> <span class="comment">/Users/clyde/Documents/workspace/poss</span>-<span class="comment">mobile
</pre></td></tr></table></figure>

<p>将这个sh加入环境变量后直接敲就可以了。
效果就是这样</p>
<p><img src="/img/codeLine.png" alt=""></p>
<p>是不是非常强大，code与comment分开计算，也可以很直观的看出代码与注释比例，之前忘记看了什么书上说的是代码与注释比例应该要<code>2/5</code>左右，我的数据明显没有达到这个数字，很明显我偷懒了。</p>
<p>当然<code>cloc.pl</code>还有很多其他参数，这个就不一一介绍了，运行一下就可以看到了。大家自己研究吧。</p>
]]></content>
    <category scheme="http://yoursite.com/tags/Mac/" term="Mac"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[在VPS上装Transmission挂PT（好邪恶）]]></title>
    <link href="http://yoursite.com/2013/06/20/transmission_on_vps/"/>
    <id>http://yoursite.com/2013/06/20/transmission_on_vps/</id>
    <published>2013-06-20T13:23:20.000Z</published>
    <updated>2013-07-06T05:37:47.000Z</updated>
    <content type="html"><![CDATA[<p>我们通常喜欢在VPS上干坏事（要弃用的时候），比如占用带宽啊，占用资源啊。现在人怎么都这么邪恶，然而我有很喜欢干邪恶的事情同时叫别人一起来做，哈哈哈。用Transmission挂PT来刷流量。当然你要是真的只是要养PT合理的应用VPS做一个sendBox也是可以的。hoho~</p>
<p>正题，在VPS上装Transmission，跟在路由器上装Transmission差不了太多。这里我VPS是Ubuntu。<br /></p>
<p>VPS上有很多种安装方式，一种就是直接下源码编译。源码下载在<code>http://www.transmissionbt.com/download/</code> 编译就不用说了一路 <code>./configure</code> <code>make</code> <code>make install</code>结束。但编译的话可能还需要很多编译的环境，可以运行</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>apt-<span class="keyword">get</span> install build-essential automake autoconf libtool pkg-config intltool libcurl4-openssl-dev libglib2<span class="number">.0</span>-dev libevent-dev libminiupnpc-dev libminiupnpc5 libappindicator-dev
</pre></td></tr></table></figure>

<p>还有一种简单一点儿，直接从源里安装。</p>
<p><h1>1.添加源并安装</h1></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="title">apt</span>-get install python-software-properties
<span class="title">add</span>-apt-repository ppa:transmissionbt/ppa
<span class="title">apt</span>-get update
<span class="title">apt</span>-get install transmission-daemon
</pre></td></tr></table></figure>

<p><h1>2.停止服务编辑配置文件</h1></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>/etc/init.d/transmission-daemon stop
vi /etc/transmission-daemon/settings.json
<span class="string">"rpc-whitelist"</span>: <span class="string">"127.0.0.1"</span> 改成  <span class="string">"rpc-whitelist"</span>: <span class="string">"<span class="variable">*.</span><span class="variable">*.</span><span class="variable">*.</span><span class="variable">*"</span>,
"</span>rpc-password<span class="string">": "</span>你的密码<span class="string">",
"</span>rpc-username<span class="string">": "</span>你的用户名<span class="string">",
</pre></td></tr></table></figure>

<p><h1>3.启动服务</h1></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>/etc/init.d/transmission-daemon <span class="operator"><span class="keyword">start</span>
</pre></td></tr></table></figure>

<p>现在你打开 <code>http://你的ip:9091/</code> 就可以看到管理界面了。<br />
<img src="img/old_trans_webui.png" alt=""><br />
这个不是很好看功能也不是很强，以后我们把它换掉。<br />
这个时候添加种子有可能会出现错误 <code>Permission denied</code> 这个是下载路径没有权限。</p>
<p>到你的下载路径也就是刚才那个配置文件的<code>download-dir</code>然后用<code>chmod</code>给它权限。搞定，效果就是这样的。
<img src="img/oldwebuidone.png" alt=""><br /></p>
<p>看来速度还不错哦。。。哈哈哈哈。</p>
]]></content>
    <category scheme="http://yoursite.com/tags/Technology/" term="Technology"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://yoursite.com/2013/06/19/hello-world/"/>
    <id>http://yoursite.com/2013/06/19/hello-world/</id>
    <published>2013-06-19T15:57:43.000Z</published>
    <updated>2013-07-06T05:38:27.000Z</updated>
    <content type="html"><![CDATA[<p>Hello ~</p>
<p>这个真的就是个很没有营养的hello world</p>
<p>最近开始有点儿兴趣学点东西所以就找到了Node.js，然后呢就看到了这个台湾大学生的项目--Hexo</p>
<p>以前都是玩wordpress jekyll Octopress ，对于新鲜的东西我向来比较好奇。</p>
<p>首先Node.js就非常吸引我，第一我知道它在脚本语言上效率非常高，至于高到什么程度我还没有做过实验，就先不做评论了，但应该不可能超过java c 之类编译语言（这个不是废话吗）。</p>
<p>其实呢我接触Node.js到现在我写这个文章的时候应该就只有不到10个小时吧，看了一些入门书和教程，由于之前学过PHP，接触过js所以感觉入门不是太难。</p>
<p>至于Hexo，我特别喜欢这种很直接很简单且祖超的管理方式，堪称简单！粗暴！有效！真心太喜欢了。以后再用单独的文字来介绍它吧。</p>
<p>以后这里就给我做学习记录了。以前的那些乱七八糟我还是不要迁移过来丢人现眼了。</p>
]]></content>
    <category scheme="http://yoursite.com/tags/Clyde/" term="Clyde"/>
  </entry>
</feed>
